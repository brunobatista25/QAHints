{"id":"helpers/permutate.js","dependencies":[{"name":"/app/.babelrc","includedInParent":true,"mtime":1658699094276},{"name":"/app/package.json","includedInParent":true,"mtime":1658701554437}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = permutate;\nexports.permutateString = permutateString;\nexports.permutateWord = permutateWord;\nexports.splitwords = splitwords;\n\n/**\r\n * Permutates a searcheable item.\r\n *\r\n *     permutate({\r\n *       slug: 'hello-world',\r\n *       category: 'greetings'\r\n *     })\r\n */\nfunction permutate(data) {\n  var words = [];\n\n  if (data.slug) {\n    words = words.concat(permutateString(data.slug));\n  }\n\n  if (data.category) {\n    words = words.concat(permutateString(data.category));\n  }\n\n  return words;\n}\n/**\r\n * Permutates strings.\r\n *\r\n * @example\r\n *     permutateString('hi joe')\r\n *     => ['h', 'hi', 'j', 'jo', 'joe']\r\n */\n\n\nfunction permutateString(str) {\n  var words = [];\n  var inputs = splitwords(str);\n  inputs.forEach(function (word) {\n    words = words.concat(permutateWord(word));\n  });\n  return words;\n}\n/**\r\n * Permutates a word.\r\n *\r\n * @example\r\n *     permutateWord('hello')\r\n *     => ['h', 'he', 'hel', 'hell', 'hello']\r\n */\n\n\nfunction permutateWord(str) {\n  var words = [];\n  var len = str.length;\n\n  for (var i = 1; i <= len; ++i) {\n    words.push(str.substr(0, i));\n  }\n\n  return words;\n}\n/**\r\n * Helper for splitting to words.\r\n *\r\n * @example\r\n *     splitWords('Hello, world!')\r\n *     => ['hello', 'world']\r\n */\n\n\nfunction splitwords(str) {\n  var words = str.toLowerCase().split(/[ /\\-_]/).filter(function (k) {\n    return k && k.length !== 0;\n  });\n  return words;\n}"},"sourceMaps":null,"error":null,"hash":"4b3dad52e2bcf774a8d096d309aa1bb5","cacheData":{"env":{}}}