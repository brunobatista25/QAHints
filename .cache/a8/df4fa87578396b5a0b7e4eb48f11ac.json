{"id":"helpers/store.js","dependencies":[{"name":"/app/.babelrc","includedInParent":true,"mtime":1658699094276},{"name":"/app/package.json","includedInParent":true,"mtime":1658701554437}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetch = fetch;\nexports.update = update;\n\n/**\r\n * Updates a local storage key. If it doesn't exist, it defaults to an empty\r\n * object.\r\n *\r\n * @example\r\n *     update('dismissed', (data) => {\r\n *       data.lol = true\r\n *       return data\r\n *     })\r\n */\nfunction update(key, fn) {\n  if (!window.localStorage) return;\n  var data = JSON.parse(window.localStorage[key] || '{}');\n  data = fn(data);\n  window.localStorage[key] = JSON.stringify(data);\n}\n/**\r\n * Fetches a local storage key.\r\n *\r\n * @example\r\n *     const data = fetch('dismissed')\r\n */\n\n\nfunction fetch(key) {\n  if (!window.localStorage) return;\n  return JSON.parse(window.localStorage[key] || '{}');\n}"},"sourceMaps":null,"error":null,"hash":"fd43b1cbc0cdaf01406911c5fba96958","cacheData":{"env":{}}}